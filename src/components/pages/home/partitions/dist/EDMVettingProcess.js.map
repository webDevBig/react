{"version":3,"sources":["EDMVettingProcess.tsx"],"names":[],"mappings":";;AAAA,+BAAyB;AACzB,0CAAkE;AAClE,mDAA4C;AAC5C,uCAA4B;AAE5B,IAAM,QAAQ,GAAG;IACb;QACE,KAAK,EAAE,MAAM;QACb,QAAQ,EAAE,MAAM;QAChB,UAAU,EAAE;YACV;gBACE,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,CAAC;gBACX,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,YAAY;aACvB;YACD;gBACE,UAAU,EAAE,CAAC;gBACb,QAAQ,EAAE,CAAC;gBACX,QAAQ,EAAE,SAAS;aACpB;SACF;KACF;CAmBF,CAAC;AAEJ,SAAS,iBAAiB;IAEtB,OAAO,CACH;QACI,iCAAC,UAAG,IAAC,SAAS,EAAC,oBAAoB;YAC/B,iCAAC,2BAAS;gBACN,iCAAC,WAAI,IAAC,SAAS,QAAC,OAAO,EAAE,CAAC,EAAE,cAAc,EAAC,QAAQ;oBAEnD,iCAAC,sBAAG,IAAC,SAAS,EAAC,YAAY,EAAC,YAAY,EAAG,QAAQ;wBAE/C,iCAAC,WAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;4BACb,iCAAC,UAAG,IAAC,SAAS,EAAC,QAAQ;gCACnB,iCAAC,iBAAU,IAAC,SAAS,EAAC,IAAI,+CAA4C;gCACtE,iCAAC,UAAG,IAAC,SAAS,EAAC,QAAQ,GAAG,CACxB,CACH,CACN;oBACN,iCAAC,sBAAG,IAAC,SAAS,EAAC,YAAY,EAAC,YAAY,EAAG,QAAQ;wBAC9C,iCAAC,WAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,oBAAoB;4BAC7C,iCAAC,UAAG,IAAC,SAAS,EAAC,KAAK,EAAC,GAAG,EAAC,sBAAsB,EAAC,GAAG,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,GAAG;4BAC7E,iCAAC,iBAAU,IAAC,SAAS,EAAC,IAAI;gCACtB,2CAAM,SAAS,EAAC,UAAU,QAAS;;gCACR,2CAAM,SAAS,EAAC,YAAY,gBAAiB;sDAC/D,CACV,CACD;oBACN,iCAAC,WAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,oBAAoB;wBAC7C,iCAAC,UAAG,IAAC,SAAS,EAAC,KAAK,EAAC,GAAG,EAAC,sBAAsB,EAAC,GAAG,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,GAAG;wBAC7E,iCAAC,iBAAU,IAAC,SAAS,EAAC,IAAI;4BACtB,2CAAM,SAAS,EAAC,UAAU,QAAS;;4BACR,2CAAM,SAAS,EAAC,YAAY,mBAAoB;kDAClE,CACV;oBACP,iCAAC,WAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,sBAAsB;wBAC/C,iCAAC,UAAG,IAAC,SAAS,EAAC,KAAK,EAAC,GAAG,EAAC,sBAAsB,EAAC,GAAG,EAAC,EAAE,EAAC,SAAS,EAAC,SAAS,GAAG;wBAC7E,iCAAC,iBAAU,IAAC,SAAS,EAAC,IAAI;4BACtB,2CAAM,SAAS,EAAC,UAAU,QAAS;;4BACR,2CAAM,SAAS,EAAC,YAAY,qBAAsB;+CACpE,CACV;oBACP,iCAAC,WAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAC,qBAAqB;wBAC9C,iCAAC,iBAAU,IAAC,SAAS,EAAC,IAAI;4BACtB,mDAAc;wIACL,CACV,CACJ,CACC,CACV,CACP,CACN,CAAA;AACL,CAAC;AAED,qBAAe,iBAAiB,CAAA","file":"EDMVettingProcess.js","sourcesContent":["import React from 'react'\r\nimport { Box, Typography, Button, Grid } from '@material-ui/core';\r\nimport { Container } from 'react-bootstrap';\r\nimport Plx from 'react-plx';\r\n\r\nconst textData = [\r\n    {\r\n      start: 'self',\r\n      duration: '70vh',\r\n      properties: [\r\n        {\r\n          startValue: 50,\r\n          endValue: 0,\r\n          unit: 'vh',\r\n          property: 'translateY',\r\n        },\r\n        {\r\n          startValue: 0,\r\n          endValue: 1,\r\n          property: 'opacity',\r\n        },\r\n      ],\r\n    },\r\n    // {\r\n    //   start: '.StickyText-trigger',\r\n    //   startOffset: '60vh',\r\n    //   duration: '30vh',\r\n    //   properties: [\r\n    //     {\r\n    //       startValue: -50,\r\n    //       endValue: -100,\r\n    //       unit: 'vh',\r\n    //       property: 'translateY',\r\n    //     },\r\n    //     {\r\n    //       startValue: 1,\r\n    //       endValue: 0,\r\n    //       property: 'opacity',\r\n    //     },\r\n    //   ],\r\n    // },\r\n  ];\r\n\r\nfunction EDMVettingProcess() {\r\n    \r\n    return (\r\n        <>\r\n            <Box className=\"edmvttnsc defpddng\">\r\n                <Container>\r\n                    <Grid container spacing={2} justifyContent='center'>\r\n                    {/* <div className=\"StickyText-trigger\"></div> */}\r\n                    <Plx className='StickyText' parallaxData={ textData } >\r\n            \r\n                        <Grid item xs={11} >\r\n                            <Box className='def_h3'>\r\n                                <Typography component='h3'>CoinxPad “EDM” Vetting Process</Typography>\r\n                                <Box className='h3line' />\r\n                            </Box>\r\n                        </Grid>\r\n                   </Plx>\r\n                   <Plx className='StickyText' parallaxData={ textData } >\r\n                        <Grid item xs={11} className=\"edm_bx_one edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_01.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">1</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Expertise</span> of the whole Team.\r\n                            </Typography>\r\n                        </Grid>\r\n                        </Plx>\r\n                        <Grid item xs={11} className=\"edm_bx_two edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_02.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">2</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Developments</span> plan and timeline. \r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={11} className=\"edm_bx_three edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_03.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">3</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Marketing Plan</span> of the project.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={11} className=\"edm_bx_four edm_cmn\">\r\n                            <Typography component=\"h6\">\r\n                                <span>*</span>Only IF all the 3 points met our requirements we will go ahead with the listing process on our Launchpad.\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EDMVettingProcess\r\n"]}