{"version":3,"sources":["EDMVettingProcess.tsx"],"names":["react_1","require","core_1","react_bootstrap_1","react_plx_1","textData","start","duration","properties","startValue","endValue","unit","property","textData1","EDMVettingProcess","createElement","Fragment","Box","className","Container","Grid","container","spacing","justifyContent","parallaxData","item","xs","Typography","component","src","alt","exports"],"mappings":"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","file":"EDMVettingProcess.min.js","sourcesContent":["import React from 'react'\r\nimport { Box, Typography, Button, Grid } from '@material-ui/core';\r\nimport { Container } from 'react-bootstrap';\r\nimport Plx from 'react-plx';\r\n\r\nconst textData = [\r\n    {\r\n      start: 'self',\r\n      duration: '370',\r\n      properties: [\r\n        {\r\n          startValue: 400,\r\n          endValue: 0,\r\n          unit: 'px',\r\n          property: 'translateY',\r\n        },\r\n      ],\r\n    }\r\n  ];\r\n  const textData1 = [\r\n    {\r\n      start: 'self',\r\n      duration: '450',\r\n      properties: [\r\n        {\r\n          startValue: 300,\r\n          endValue: 0,\r\n          unit: 'px',\r\n          property: 'translateY',\r\n        },\r\n      ],\r\n    }\r\n  ];\r\n \r\n\r\nfunction EDMVettingProcess() {\r\n    \r\n    return (\r\n        <>\r\n            <Box className=\"edmvttnsc defpddng\">\r\n            <Plx className='StickyText sticky' >\r\n                <Container>\r\n                    <Grid container spacing={2} justifyContent='center'>\r\n                    <Plx className='StickyText' parallaxData={ textData1 } >\r\n            \r\n                        <Grid item xs={11} >\r\n                            <Box className='def_h3'>\r\n                                <Typography component='h3'>CoinxPad “EDM” Vetting Process</Typography>\r\n                                <Box className='h3line' />\r\n                            </Box>\r\n                        </Grid>\r\n                   </Plx>\r\n                   <Plx className='StickyText' parallaxData={ textData } >\r\n                        <Grid item xs={11} className=\"edm_bx_one edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_01.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">1</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Expertise</span> of the whole Team.\r\n                            </Typography>\r\n                        </Grid>\r\n                        </Plx>\r\n                        <Plx className='StickyText' parallaxData={ textData } >\r\n                        <Grid item xs={11} className=\"edm_bx_two edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_02.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">2</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Developments</span> plan and timeline. \r\n                            </Typography>\r\n                        </Grid>\r\n                        </Plx>\r\n                        <Plx className='StickyText StickyText_last' parallaxData={ textData } >\r\n                        <Grid item xs={11} className=\"edm_bx_three edm_cmn\">\r\n                            <Box component=\"img\" src=\"/images/edm_l_03.png\" alt=\"\" className=\"edm_img\" />\r\n                            <Typography component=\"h6\">\r\n                                <span className=\"nmbr_txt\">3</span>\r\n                                We review and evaluate the <span className=\"edm_df_txt\">Marketing Plan</span> of the project.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={11} className=\"edm_bx_four edm_cmn\">\r\n                            <Typography component=\"h6\">\r\n                                <span>*</span>Only IF all the 3 points met our requirements we will go ahead with the listing process on our Launchpad.\r\n                            </Typography>\r\n                        </Grid>\r\n                        </Plx>\r\n                    </Grid>\r\n                </Container>\r\n                </Plx>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EDMVettingProcess\r\n"]}