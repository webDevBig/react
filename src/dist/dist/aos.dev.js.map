{"version":3,"sources":["aos.js"],"names":["$aosElements","initialized","options","offset","delay","easing","duration","disable","once","startEvent","throttleDelay","debounceDelay","disableMutationObserver","refresh","initialize","prepare","handleScroll","refreshHard","elements","forEach","el","i","node","removeAttribute","isDisabled","optionDisable","detect","mobile","phone","tablet","init","settings","Object","assign","browserNotSupported","document","all","window","atob","querySelector","setAttribute","indexOf","readyState","addEventListener","debounce","throttle","observe","module","exports"],"mappings":"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","sourcesContent":["/**\n * *******************************************************\n * AOS (Animate on scroll) - wowjs alternative\n * made to animate elements on scroll in both directions\n * *******************************************************\n */\n\n// import styles from './../sass/aos.scss';\n\n// // Modules & helpers\n// import throttle from 'lodash.throttle';\n// import debounce from 'lodash.debounce';\n\n// import observe from './libs/observer';\n\n// import detect from './helpers/detector';\n// import handleScroll from './helpers/handleScroll';\n// import prepare from './helpers/prepare';\n// import elements from './helpers/elements';\n\n/**\n * Private variables\n */\nlet $aosElements = [];\nlet initialized = false;\n\n/**\n * Default options\n */\nlet options = {\n  offset: 120,\n  delay: 0,\n  easing: 'ease',\n  duration: 400,\n  disable: false,\n  once: false,\n  startEvent: 'DOMContentLoaded',\n  throttleDelay: 99,\n  debounceDelay: 50,\n  disableMutationObserver: false,\n};\n\n/**\n * Refresh AOS\n */\nconst refresh = function refresh(initialize = false) {\n  // Allow refresh only when it was first initialized on startEvent\n  if (initialize) initialized = true;\n\n  if (initialized) {\n    // Extend elements objects in $aosElements with their positions\n    $aosElements = prepare($aosElements, options);\n    // Perform scroll event, to refresh view and show/hide elements\n    handleScroll($aosElements, options.once);\n\n    return $aosElements;\n  }\n};\n\n/**\n * Hard refresh\n * create array with new elements and trigger refresh\n */\nconst refreshHard = function refreshHard() {\n  $aosElements = elements();\n  refresh();\n};\n\n/**\n * Disable AOS\n * Remove all attributes to reset applied styles\n */\nconst disable = function() {\n  $aosElements.forEach(function(el, i) {\n    el.node.removeAttribute('data-aos');\n    el.node.removeAttribute('data-aos-easing');\n    el.node.removeAttribute('data-aos-duration');\n    el.node.removeAttribute('data-aos-delay');\n  });\n};\n\n\n/**\n * Check if AOS should be disabled based on provided setting\n */\nconst isDisabled = function(optionDisable) {\n  return optionDisable === true ||\n  (optionDisable === 'mobile' && detect.mobile()) ||\n  (optionDisable === 'phone' && detect.phone()) ||\n  (optionDisable === 'tablet' && detect.tablet()) ||\n  (typeof optionDisable === 'function' && optionDisable() === true);\n};\n\n/**\n * Initializing AOS\n * - Create options merging defaults with user defined options\n * - Set attributes on <body> as global setting - css relies on it\n * - Attach preparing elements to options.startEvent,\n *   window resize and orientation change\n * - Attach function that handle scroll and everything connected to it\n *   to window scroll event and fire once document is ready to set initial state\n */\nconst init = function init(settings) {\n  options = Object.assign(options, settings);\n\n  // Create initial array with elements -> to be fullfilled later with prepare()\n  $aosElements = elements();\n\n  // Detect not supported browsers (<=IE9)\n  // http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n  const browserNotSupported = document.all && !window.atob;\n\n  /**\n   * Don't init plugin if option `disable` is set\n   * or when browser is not supported\n   */\n  if (isDisabled(options.disable) || browserNotSupported) {\n    return disable();\n  }\n\n  /**\n   * Set global settings on body, based on options\n   * so CSS can use it\n   */\n  document.querySelector('body').setAttribute('data-aos-easing', options.easing);\n  document.querySelector('body').setAttribute('data-aos-duration', options.duration);\n  document.querySelector('body').setAttribute('data-aos-delay', options.delay);\n\n  /**\n   * Handle initializing\n   */\n  if (options.startEvent === 'DOMContentLoaded' &&\n    ['complete', 'interactive'].indexOf(document.readyState) > -1) {\n    // Initialize AOS if default startEvent was already fired\n    refresh(true);\n  } else if (options.startEvent === 'load') {\n    // If start event is 'Load' - attach listener to window\n    window.addEventListener(options.startEvent, function() {\n      refresh(true);\n    });\n  } else {\n    // Listen to options.startEvent and initialize AOS\n    document.addEventListener(options.startEvent, function() {\n      refresh(true);\n    });\n  }\n\n  /**\n   * Refresh plugin on window resize or orientation change\n   */\n  window.addEventListener('resize', debounce(refresh, options.debounceDelay, true));\n  window.addEventListener('orientationchange', debounce(refresh, options.debounceDelay, true));\n\n  /**\n   * Handle scroll event to animate elements on scroll\n   */\n  window.addEventListener('scroll', throttle(() => {\n    handleScroll($aosElements, options.once);\n  }, options.throttleDelay));\n\n  /**\n   * Observe [aos] elements\n   * If something is loaded by AJAX\n   * it'll refresh plugin automatically\n   */\n  if (!options.disableMutationObserver) {\n    observe('[data-aos]', refreshHard);\n  }\n\n  return $aosElements;\n};\n\n/**\n * Export Public API\n */\n\nmodule.exports = {\n  init,\n  refresh,\n  refreshHard\n};\n"],"file":"aos.dev.js"}